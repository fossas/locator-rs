use locator::Revision;
use simple_test_case::test_case;

#[test_case("=1.2.3", "1.2.3", true; "eq1.2.3_includes_1.2.3")]
#[test_case("=1.2.3", "1.2.4", false; "eq1.2.3_excludes_1.2.4")]
#[test_case("=1.2", "1.2.3", true; "eq1.2_includes_1.2.3")]
#[test_case("=1.2", "1.3.0", false; "eq1.2_excludes_1.3.0")]
#[test_case("=1", "1.2.3", true; "eq1_includes_1.2.3")]
#[test_case("=1", "2.0.0", false; "eq1_excludes_2.0.0")]
#[test_case(">1.2.3", "1.2.4", true; "gt1.2.3_includes_1.2.4")]
#[test_case(">1.2.3", "1.2.2", false; "gt1.2.3_excludes_1.2.2")]
#[test_case(">1.2", "1.3.0", true; "gt1.2_includes_1.3.0")]
#[test_case(">1.2", "1.2.3", false; "gt1.2_excludes_1.2.3")]
#[test_case(">1", "2.0.0", true; "gt1_includes_2.0.0")]
#[test_case(">1", "1.2.3", false; "gt1_excludes_1.2.3")]
#[test_case(">=1.2.3", "1.2.4", true; "gte1.2.3_includes_1.2.4")]
#[test_case(">=1.2.3", "1.2.2", false; "gte1.2.3_excludes_1.2.2")]
#[test_case(">=1.2", "1.3.0", true; "gte1.2_includes_1.3.0")]
#[test_case(">=1.2", "1.1.3", false; "gte1.2_excludes_1.1.3")]
#[test_case(">=1", "2.0.0", true; "gte1_includes_2.0.0")]
#[test_case(">=1", "0.9.9", false; "gte1_excludes_0.9.9")]
#[test_case("<=1.2.3", "1.2.3", true; "lte1.2.3_includes_1.2.3")]
#[test_case("<=1.2.3", "1.2.4", false; "lte1.2.3_excludes_1.2.4")]
#[test_case("<=1.2", "1.2.9", true; "lte1.2_includes_1.2.9")]
#[test_case("<=1.2", "1.3.0", false; "lte1.2_excludes_1.3.0")]
#[test_case("<=1", "1.9.9", true; "lte1_includes_1.9.9")]
#[test_case("<=1", "2.0.0", false; "lte1_excludes_2.0.0")]
#[test_case("<1.2.3", "1.2.2", true; "lt1.2.3_includes_1.2.2")]
#[test_case("<1.2.3", "1.2.4", false; "lt1.2.3_excludes_1.2.4")]
#[test_case("<1.2", "1.1.9", true; "lt1.2_includes_1.1.9")]
#[test_case("<1.2", "1.2.0", false; "lt1.2_excludes_1.2.0")]
#[test_case("<1", "0.9.9", true; "lt1_includes_0.9.9")]
#[test_case("<1", "1.2.3", false; "lt1_excludes_1.2.3")]
#[test_case("~1.2.3", "1.2.4", true; "tilde1.2.3_includes_1.2.4")]
#[test_case("~1.2.3", "1.3.0", false; "tilde1.2.3_excludes_1.3.0")]
#[test_case("~1.2", "1.2.0", true; "tilde1.2_includes_1.2.0")]
#[test_case("~1.2", "1.3.0", false; "tilde1.2_excludes_1.3.0")]
#[test_case("~1", "1.0.0", true; "tilde1_includes_1.0.0")]
#[test_case("~1", "2.0.0", false; "tilde1_excludes_2.0.0")]
#[test_case("^1.2.3", "1.9.9", true; "caret1.2.3_includes_1.9.9")]
#[test_case("^1.2.3", "2.0.0", false; "caret1.2.3_excludes_2.0.0")]
#[test_case("^0.2.3", "0.2.9", true; "caret0.2.3_includes_0.2.9")]
#[test_case("^0.2.3", "0.3.0", false; "caret0.2.3_excludes_0.3.0")]
#[test_case("^0.0.3", "0.0.3", true; "caret0.0.3_includes_0.0.3")]
#[test_case("^0.0.3", "0.0.4", false; "caret0.0.3_excludes_0.0.4")]
#[test_case("^1.2", "1.9.9", true; "caret1.2_includes_1.9.9")]
#[test_case("^1.2", "2.0.0", false; "caret1.2_excludes_2.0.0")]
#[test_case("^0.2", "0.2.9", true; "caret0.2_includes_0.2.9")]
#[test_case("^0.2", "0.3.0", false; "caret0.2_excludes_0.3.0")]
#[test_case("^0.0", "0.0.0", true; "caret0.0_includes_0.0.0")]
#[test_case("^0.0", "0.1.0", false; "caret0.0_excludes_0.1.0")]
#[test_case("^1", "1.9.9", true; "caret1_includes_1.9.9")]
#[test_case("^1", "2.0.0", false; "caret1_excludes_2.0.0")]
#[test_case("1.2.*", "1.2.3", true; "1.2.wc_includes_1.2.3")]
#[test_case("1.2.*", "1.3.0", false; "1.2.wc_excludes_1.3.0")]
#[test_case("1.*", "1.2.3", true; "1.wc_includes_1.2.3")]
#[test_case("1.*", "2.0.0", false; "1.wc_excludes_2.0.0")]
#[test_case("1.*.*", "1.2.3", true; "1.wc.wc_includes_1.2.3")]
#[test_case("1.*.*", "2.0.0", false; "1.wc.wc_excludes_2.0.0")]
#[test]
fn cargo_parse_and_compare(req: &str, ver: &str, expected: bool) {
    let req = locator::constraint::cargo::parse(req).expect("parse constraint");
    let ver = Revision::from(ver);
    assert_eq!(
        req.all_match(&ver),
        expected,
        "Expected {req:?} to match {ver:?}"
    );
}
